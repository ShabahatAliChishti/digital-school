@model digital_School.ViewModel.tbl_LectureValidation
@{
    ViewBag.Title = "uploadLecture";
    Layout = "~/Areas/Teacher/Views/Shared/_Layout.cshtml";
}
<div class="content-wrapper" style="margin-top:50px;">
    <div class="card card-info">
    <div class="card-header ">
        <h3 class="card-title ">Lecture</h3>
    </div>

    @using (Html.BeginForm("uploadLecture", "Lecture", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        </div>

            @*<div class="form-group">
                    @Html.LabelFor(model => model.ClassId, "ClassId", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("ClassId", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.ClassId, "", new { @class = "text-danger" })
                    </div>
                </div>*@

        <form class="form-horizontal">
            <div class="card-body">
                <div class="form-group row">
                    <div class="col-md-1"></div>
                    <label for="inputPassword3" class="col-md-3 col-lg-2 col-form-label">Lecture Name</label>
                    <div class="col-md-7 col-lg-8">
                        @Html.EditorFor(model => model.Lecturename, new { htmlAttributes = new { @class = "form-control input-sm", @type = "text", placeholder = @Html.DisplayName("Enter Lecture Name") } })
                        @Html.ValidationMessageFor(model => model.Lecturename, "", new { @class = "text-danger" })
                    </div>
                </div>


                <div class="form-group row">
                    <div class="col-md-1"></div>
                    <label for="inputPassword3" class="col-md-3 col-lg-2 col-form-label">Course</label>
                    <div class="col-md-7 col-lg-8">
                        @Html.DropDownListFor(model => model.CourseId, (SelectList)ViewBag.course, "Select Course", new { required = "required", @class = "form-control", @id = "ddCourseId" })
                        @Html.ValidationMessageFor(x => Model.CourseId, "", new { @class = "text-danger" })
                    </div>
            </div>









            <div class="form-group row">
                <div class="col-md-1"></div>
                <label for="inputPassword3" class="col-md-3 col-lg-2 col-form-label">Lecture URL</label>
                <div class="col-md-7 col-lg-8">
                    @Html.TextBoxFor(model => model.UserdocFIle, new { @type = "file", @class = "form-control input-sm" })
                    @Html.ValidationMessageFor(model => model.UserdocFIle, "", new { @class = "text-danger" })
                    @Html.ValidationMessage("CustomError")
                </div>
            </div>


            <div class="form-group row">
                <div class="col-md-1"></div>
                <label for="inputPassword3" class="col-md-3 col-lg-2 col-form-label">Lecture Description</label>
                <div class="col-md-7 col-lg-8">
                    @Html.TextAreaFor(model => model.Lecture_Description, 8, 40, htmlAttributes: new { style = "width: 100%; max-width: 100%;", placeholder = @Html.DisplayName("Enter Description") })
                    @Html.ValidationMessageFor(model => model.Lecture_Description, "", new { @class = "text-danger" })
                </div>
                </div>


            <div class="form-group row">
                <div class="col-md-1"></div>
                <label for="inputPassword3" class="col-md-3 col-lg-2 col-form-label">Video URL</label>
                <div class="col-md-7 col-lg-8">
                    @Html.EditorFor(model => model.VideoLink, new { htmlAttributes = new { @class = "form-control input-sm", @type = "text", placeholder = @Html.DisplayName("Enter Vedio URL") } })
                    @Html.ValidationMessageFor(model => model.VideoLink, "", new { @class = "text-danger" })
                </div>
                </div>
            <div class="card-footer">
                <div class="row">
                    <div class="col-md-6 col-sm-6 col-6">
                        <button type="submit" class="btn btn-info float-right">ADD</button>
                    </div>
                    <div class="col-md-6 col-sm-6 col-6">
                        <button type="submit" class="btn btn-default float-left ">Cancel</button>
                    </div>
                </div>

            </div>
                </div>           
                <!-- /.card-footer -->
            </form>

    }
</div>



        </div>
          
    <script src="~/Scripts/jquery-3.3.1.min.js"></script>
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.js"></script>

    @if (ViewBag.Message != null)
    {
        <script type="text/javascript">

            window.onload = function () {
                alert("@ViewBag.Message");
            };
        </script>

    }
