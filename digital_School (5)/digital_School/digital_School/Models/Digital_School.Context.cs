//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace digital_School.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class Digital_SchoolEntities2 : DbContext
    {
        public Digital_SchoolEntities2()
            : base("name=Digital_SchoolEntities2")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<AdvisoryBoard> AdvisoryBoards { get; set; }
        public virtual DbSet<Announcement> Announcements { get; set; }
        public virtual DbSet<Answer> Answers { get; set; }
        public virtual DbSet<Article> Articles { get; set; }
        public virtual DbSet<ArticleComment> ArticleComments { get; set; }
        public virtual DbSet<ArticleType> ArticleTypes { get; set; }
        public virtual DbSet<AssignmentResult> AssignmentResults { get; set; }
        public virtual DbSet<Bank> Banks { get; set; }
        public virtual DbSet<Blog> Blogs { get; set; }
        public virtual DbSet<BlogType> BlogTypes { get; set; }
        public virtual DbSet<Catigory> Catigories { get; set; }
        public virtual DbSet<Certificate> Certificates { get; set; }
        public virtual DbSet<CertificateType> CertificateTypes { get; set; }
        public virtual DbSet<Client> Clients { get; set; }
        public virtual DbSet<Client_SchoolComplain> Client_SchoolComplain { get; set; }
        public virtual DbSet<ClientCertificate> ClientCertificates { get; set; }
        public virtual DbSet<ClientMessage> ClientMessages { get; set; }
        public virtual DbSet<ClientReply> ClientReplies { get; set; }
        public virtual DbSet<Collaboration> Collaborations { get; set; }
        public virtual DbSet<Comment> Comments { get; set; }
        public virtual DbSet<Course> Courses { get; set; }
        public virtual DbSet<CourseAssignToTeacher> CourseAssignToTeachers { get; set; }
        public virtual DbSet<Day> Days { get; set; }
        public virtual DbSet<Department> Departments { get; set; }
        public virtual DbSet<Discussion> Discussions { get; set; }
        public virtual DbSet<Donar> Donars { get; set; }
        public virtual DbSet<Event> Events { get; set; }
        public virtual DbSet<Exam> Exams { get; set; }
        public virtual DbSet<HelpCategory> HelpCategories { get; set; }
        public virtual DbSet<Helpe> Helpes { get; set; }
        public virtual DbSet<KidsStoryType> KidsStoryTypes { get; set; }
        public virtual DbSet<KidTalent> KidTalents { get; set; }
        public virtual DbSet<Lecture> Lectures { get; set; }
        public virtual DbSet<loginTable> loginTables { get; set; }
        public virtual DbSet<ManualTest> ManualTests { get; set; }
        public virtual DbSet<Message> Messages { get; set; }
        public virtual DbSet<OnlineTest> OnlineTests { get; set; }
        public virtual DbSet<OnlineTestAnswer> OnlineTestAnswers { get; set; }
        public virtual DbSet<OnlineTestQuestionOption> OnlineTestQuestionOptions { get; set; }
        public virtual DbSet<OnlineTestResult> OnlineTestResults { get; set; }
        public virtual DbSet<Option> Options { get; set; }
        public virtual DbSet<PaymentConfirmation> PaymentConfirmations { get; set; }
        public virtual DbSet<Post> Posts { get; set; }
        public virtual DbSet<Question> Questions { get; set; }
        public virtual DbSet<Reply> Replies { get; set; }
        public virtual DbSet<ResultClient> ResultClients { get; set; }
        public virtual DbSet<RoleName> RoleNames { get; set; }
        public virtual DbSet<School> Schools { get; set; }
        public virtual DbSet<SchoolAssignment> SchoolAssignments { get; set; }
        public virtual DbSet<Section> Sections { get; set; }
        public virtual DbSet<Status> Status { get; set; }
        public virtual DbSet<Student> Students { get; set; }
        public virtual DbSet<StudentComplain> StudentComplains { get; set; }
        public virtual DbSet<StudentHistory> StudentHistories { get; set; }
        public virtual DbSet<StudentMaster> StudentMasters { get; set; }
        public virtual DbSet<StudentResult> StudentResults { get; set; }
        public virtual DbSet<SubmitAssignment> SubmitAssignments { get; set; }
        public virtual DbSet<SubmitManualTest> SubmitManualTests { get; set; }
        public virtual DbSet<Subscriber> Subscribers { get; set; }
        public virtual DbSet<SuperAdmin> SuperAdmins { get; set; }
        public virtual DbSet<Tbl_Class> Tbl_Class { get; set; }
        public virtual DbSet<Teacher> Teachers { get; set; }
        public virtual DbSet<Team> Teams { get; set; }
        public virtual DbSet<TechnicTip> TechnicTips { get; set; }
        public virtual DbSet<TimeTable> TimeTables { get; set; }
        public virtual DbSet<TranscationType> TranscationTypes { get; set; }
        public virtual DbSet<UserEnrollInCourse> UserEnrollInCourses { get; set; }
        public virtual DbSet<UserFeedback> UserFeedbacks { get; set; }
        public virtual DbSet<webadd> webadds { get; set; }
        public virtual DbSet<WebsiteReview> WebsiteReviews { get; set; }
        public virtual DbSet<KidsStory> KidsStories { get; set; }
    
        public virtual ObjectResult<get_AnotherDatabase_Result> get_AnotherDatabase()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<get_AnotherDatabase_Result>("get_AnotherDatabase");
        }
    
        public virtual ObjectResult<get_Certificate_Result> get_Certificate()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<get_Certificate_Result>("get_Certificate");
        }
    
        public virtual ObjectResult<get_ClientProfileData_Result> get_ClientProfileData(Nullable<int> userId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<get_ClientProfileData_Result>("get_ClientProfileData", userIdParameter);
        }
    
        public virtual ObjectResult<get_forum_Result> get_forum()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<get_forum_Result>("get_forum");
        }
    
        public virtual ObjectResult<get_OurCourse_Result> get_OurCourse()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<get_OurCourse_Result>("get_OurCourse");
        }
    
        public virtual ObjectResult<get_OurCourseMain_Result> get_OurCourseMain()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<get_OurCourseMain_Result>("get_OurCourseMain");
        }
    
        public virtual ObjectResult<get_SchoolClass_Result> get_SchoolClass(Nullable<int> schoolId)
        {
            var schoolIdParameter = schoolId.HasValue ?
                new ObjectParameter("SchoolId", schoolId) :
                new ObjectParameter("SchoolId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<get_SchoolClass_Result>("get_SchoolClass", schoolIdParameter);
        }
    
        public virtual ObjectResult<get_SchoolCourse_Result> get_SchoolCourse(Nullable<int> user_Id, Nullable<int> role_Id)
        {
            var user_IdParameter = user_Id.HasValue ?
                new ObjectParameter("User_Id", user_Id) :
                new ObjectParameter("User_Id", typeof(int));
    
            var role_IdParameter = role_Id.HasValue ?
                new ObjectParameter("Role_Id", role_Id) :
                new ObjectParameter("Role_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<get_SchoolCourse_Result>("get_SchoolCourse", user_IdParameter, role_IdParameter);
        }
    
        public virtual ObjectResult<get_SchoolProfileData_Result> get_SchoolProfileData(Nullable<int> school_Id)
        {
            var school_IdParameter = school_Id.HasValue ?
                new ObjectParameter("School_Id", school_Id) :
                new ObjectParameter("School_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<get_SchoolProfileData_Result>("get_SchoolProfileData", school_IdParameter);
        }
    
        public virtual ObjectResult<get_SchoolSection_Result> get_SchoolSection(Nullable<int> schoolId)
        {
            var schoolIdParameter = schoolId.HasValue ?
                new ObjectParameter("SchoolId", schoolId) :
                new ObjectParameter("SchoolId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<get_SchoolSection_Result>("get_SchoolSection", schoolIdParameter);
        }
    
        public virtual ObjectResult<get_SchoolStudent_Result> get_SchoolStudent(Nullable<int> school_Id)
        {
            var school_IdParameter = school_Id.HasValue ?
                new ObjectParameter("School_Id", school_Id) :
                new ObjectParameter("School_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<get_SchoolStudent_Result>("get_SchoolStudent", school_IdParameter);
        }
    
        public virtual ObjectResult<get_StudentEnrollCourse_Result> get_StudentEnrollCourse(string regNo, Nullable<int> class_Id)
        {
            var regNoParameter = regNo != null ?
                new ObjectParameter("RegNo", regNo) :
                new ObjectParameter("RegNo", typeof(string));
    
            var class_IdParameter = class_Id.HasValue ?
                new ObjectParameter("Class_Id", class_Id) :
                new ObjectParameter("Class_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<get_StudentEnrollCourse_Result>("get_StudentEnrollCourse", regNoParameter, class_IdParameter);
        }
    
        public virtual ObjectResult<get_StudentProfileData_Result> get_StudentProfileData(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<get_StudentProfileData_Result>("get_StudentProfileData", idParameter);
        }
    
        public virtual ObjectResult<get_StudentRegisterationNoSimilarCourse_Result> get_StudentRegisterationNoSimilarCourse(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<get_StudentRegisterationNoSimilarCourse_Result>("get_StudentRegisterationNoSimilarCourse", idParameter);
        }
    
        public virtual ObjectResult<get_SuperAdminProfileData_Result> get_SuperAdminProfileData(Nullable<int> ad_Id)
        {
            var ad_IdParameter = ad_Id.HasValue ?
                new ObjectParameter("ad_Id", ad_Id) :
                new ObjectParameter("ad_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<get_SuperAdminProfileData_Result>("get_SuperAdminProfileData", ad_IdParameter);
        }
    
        public virtual ObjectResult<get_TeacherAssignedCourse_Result> get_TeacherAssignedCourse(Nullable<int> teacherId, Nullable<int> class_Id)
        {
            var teacherIdParameter = teacherId.HasValue ?
                new ObjectParameter("TeacherId", teacherId) :
                new ObjectParameter("TeacherId", typeof(int));
    
            var class_IdParameter = class_Id.HasValue ?
                new ObjectParameter("Class_Id", class_Id) :
                new ObjectParameter("Class_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<get_TeacherAssignedCourse_Result>("get_TeacherAssignedCourse", teacherIdParameter, class_IdParameter);
        }
    
        public virtual ObjectResult<get_TeacherProfileData_Result> get_TeacherProfileData(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<get_TeacherProfileData_Result>("get_TeacherProfileData", idParameter);
        }
    
        public virtual ObjectResult<get_TeacherSchool_Result> get_TeacherSchool(Nullable<int> school_Id)
        {
            var school_IdParameter = school_Id.HasValue ?
                new ObjectParameter("School_Id", school_Id) :
                new ObjectParameter("School_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<get_TeacherSchool_Result>("get_TeacherSchool", school_IdParameter);
        }
    
        public virtual ObjectResult<get_TeacherStudentSimilarCourse_Result> get_TeacherStudentSimilarCourse(string regNo, Nullable<int> id)
        {
            var regNoParameter = regNo != null ?
                new ObjectParameter("RegNo", regNo) :
                new ObjectParameter("RegNo", typeof(string));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<get_TeacherStudentSimilarCourse_Result>("get_TeacherStudentSimilarCourse", regNoParameter, idParameter);
        }
    
        public virtual int update_SuperAdminProfileData(Nullable<int> ad_Id, string ad_email, string ad_name, string ad_imageurl)
        {
            var ad_IdParameter = ad_Id.HasValue ?
                new ObjectParameter("ad_Id", ad_Id) :
                new ObjectParameter("ad_Id", typeof(int));
    
            var ad_emailParameter = ad_email != null ?
                new ObjectParameter("ad_email", ad_email) :
                new ObjectParameter("ad_email", typeof(string));
    
            var ad_nameParameter = ad_name != null ?
                new ObjectParameter("ad_name", ad_name) :
                new ObjectParameter("ad_name", typeof(string));
    
            var ad_imageurlParameter = ad_imageurl != null ?
                new ObjectParameter("ad_imageurl", ad_imageurl) :
                new ObjectParameter("ad_imageurl", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("update_SuperAdminProfileData", ad_IdParameter, ad_emailParameter, ad_nameParameter, ad_imageurlParameter);
        }
    }
}
